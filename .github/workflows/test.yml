name: Perl CI

on:
  push:
    branches:
      - '**'
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Perl
        uses: shogo82148/actions-setup-perl@v1
        with:
          perl-version: '5.36'
          multi-thread: true

      - name: Install just
        uses: extractions/setup-just@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Perl modules
        uses: actions/cache@v4
        id: cache-perl-modules
        with:
          path: |
            ~/.perl-cpm
            ~/.cache/perl-carton
            /opt/hostedtoolcache/perl
          key: perl-modules-${{ runner.os }}-${{ hashFiles('cpanfile') }}
          restore-keys: |
            perl-modules-${{ runner.os }}-

      - name: Cache project dependencies
        uses: actions/cache@v4
        with:
          path: local
          key: perl-carton-${{ hashFiles('cpanfile.snapshot') }}
          restore-keys: |
            perl-carton-

      - name: Install dependencies
        run: |
          cpanm -n Carton
          if [ ! -f cpanfile.snapshot ]; then
            carton install
          else
            carton install --deployment
          fi

      - name: Run format check
        run: |
          carton exec -- just fmt
        env:
          PERL5LIB: ${{ github.workspace }}/lib

      - name: Run linter
        run: |
          carton exec -- just lint
        env:
          PERL5LIB: ${{ github.workspace }}/lib

      - name: Run tests
        run: |
          carton exec -- just test
        env:
          PERL5LIB: ${{ github.workspace }}/lib

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: test
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          draft: false
          prerelease: false
